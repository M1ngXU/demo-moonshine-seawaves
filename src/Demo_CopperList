;using cursorGifReader, cursorSprite, backgroundGifReader
CL_Prepare
	move.l	backgroundGifReader,a0
	move.l	GifReader_Palette(a0),a0
	lea	CL_WaterColor,a1
	move.w	#32,d0
	move.w	#color00,d1
CL_PrepareWaterColorsLp
	move.w	d1,(a1)+
	move.w	(a0)+,d3
	move.w	d3,d2
	and.w	#$F,d2
	and.w	#$EE0,d3
	lsr.w	#1,d3
	or.w	d3,d2	;linear approximation of (000) => (000) and (FFF) => (77F)
	move.w	d2,(a1)+
	add.w	#color01-color00,d1
	sub.w	#1,d0
	bne	CL_PrepareWaterColorsLp
	
	move.l	cursorGifReader,a0
	move.l	GifReader_Palette(a0),a1
	move.l	cursorSprite,a0
	move.w	Sprite_DmaStructurePointer(a0),CL_Spr0Pth+2
	move.w	Sprite_DmaStructurePointer+2(a0),CL_Spr0Ptl+2
	
	lea	CL_WaterScroll,a0
	move.w	#80,d0	;line counter
	move.w	#160*256+$2C01,d1	;wait position on line 160
CL_PrepareLp
	cmp.w	#1,d1
	bne	CL_PrepareNormalCase
	move.l	#$ffdffffe,(a0)+
	bra	CL_PrepareAddBPLCON
CL_PrepareNormalCase
	move.w	d1,(a0)+
	move.w	#$FF00,(a0)+
CL_PrepareAddBPLCON
	move.w	#bplcon1,(a0)+
	move.w	#$88,(a0)+
	add.w	#256,d1
	sub.w	#1,d0
	bne	CL_PrepareLp
	rts

;using cl
CL_UpdateWater
	movem.l	d0-3/a0-3,-(a7)
	move.l	cl,a3
	lea	CL_AmplitudeEnd,a1
	lea	CL_OffsetEnd,a2
	move.l	CopperList_AddonPointer(a3),a0
	add.l	#CL_WaterScroll-CL_Start,a0
	move.w	#80,d3	;line counter
CL_UpdateWaterLp
	move.w	d6,d0
	add.w	-(a2),d0
	move.w	-(a1),d1
	move.w	#8*256+256/2,d2	;bias 8.5
	bsr	Trigo_Sine
	and.w	#$F,d0
	move.w	d0,d1
	lsl.w	#4,d1
	add.w	d1,d0
	move.w	d0,6(a0)
	add.l	#8,a0
	sub.w	#1,d3
	bne	CL_UpdateWaterLp
	movem.l	(a7)+,d0-3/a0-3
	rts
	
CL_RowSize	equ	(320+16)/8
CL_Start
	dc.w	bplcon1,$88	;midpoint scroll position
CL_Spr0Pth
	dc.w	spr0pth,0
CL_Spr0Ptl
	dc.w	spr0ptl,0
CL_WaterStart
	;line 160 must be 0-pix, colorXY not written fast enough
	dc.w	$2C81+159*256+320/8,$FFFE	;WAIT for point (159,320)
	dc.w	dmacon,DMAF_SPRITE	;disable pointer below water line
	dc.w	spr0data,0
	dc.w	spr0datb,0
CL_WaterColor
	ds.l	32
	dc.w	$2C01+160*256,$FF00	;WAIT for point (160,0)
	dc.w	bpl1mod,-CL_RowSize*3
	dc.w	bpl2mod,-CL_RowSize*3
CL_WaterScroll
	ds.l	80*2
	dc.w	$2C81+(240-256)*256,$FFFE	;WAIT for point (240,0) (after last line)
	dc.w	dmacon,DMAF_SETCLR+DMAF_SPRITE	;restore sprite at end for [0,159] of next frame or OS if restored
CL_End

;f=x=>8.1*(Math.cos((x+30)/76))
;b=[];for (i=0;i<80;i++) { b.push(Math.floor(f(i) * 256)) }
;c=[[],[],[],[],[]];for (i=0;i<80;i++){c[Math.floor(i/16)].push(b[i])}
;console.log('    dc.w    ' + c.map(c => c.join(',')).join('\n    dc.w    '));
    dc.w    1914,1903,1892,1881,1869,1857,1845,1832,1819,1806,1792,1779,1764,1750,1735,1720
    dc.w    1705,1689,1673,1657,1640,1623,1606,1589,1571,1553,1535,1517,1498,1479,1460,1440
    dc.w    1421,1401,1380,1360,1339,1318,1297,1276,1254,1232,1210,1188,1165,1143,1120,1097
    dc.w    1074,1050,1027,1003,979,955,930,906,881,856,832,807,781,756,730,705
    dc.w    679,653,627,601,575,549,523,496,470,443,416,390,363,336,309,282
CL_AmplitudeEnd

;f=x=>10*(10-8.1*(Math.cos((x+30)/76)))
    dc.w    6458,6565,6675,6788,6904,7024,7147,7273,7402,7534,7670,7808,7950,8095,8243,8393
    dc.w    8547,8704,8864,9026,9191,9360,9531,9705,9881,10061,10243,10427,10614,10804,10997,11192
    dc.w    11389,11589,11792,11996,12203,12413,12624,12838,13055,13273,13493,13716,13941,14167,14396,14626
    dc.w    14859,15093,15329,15567,15807,16048,16291,16536,16782,17030,17279,17529,17781,18035,18290,18545
    dc.w    18803,19061,19320,19581,19843,20105,20369,20633,20899,21165,21432,21699,21968,22236,22506,22776
CL_OffsetEnd
even