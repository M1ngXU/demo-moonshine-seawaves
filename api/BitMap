;OBJECT STRUCTURE
BitMap_Depth	equ	0
BitMap_Width	equ	2
BitMap_Height	equ	4
BitMap_Plane1	equ	6
BitMap_Plane2	equ	10
BitMap_Plane3	equ	14
BitMap_Plane4	equ	18
BitMap_Plane5	equ	22
BitMap_Plane6	equ	26

;NOT OBJECT STRUCTURE
BitMap_ObjSize	equ	30

;STATIC
;  IN
;    d0.b = depth (in bitplanes)
;    d1.w = width (in pix)
;    d2.w = height (in pix)
;  OUT
;    a0 = bitmap object pointer
BitMap_Create
	movem.l	d0-4/a1-2/a6,-(a7)
	move.w	d1,d3
	clr.l	d4
	move.b	d0,d4
	move.l	#BitMap_ObjSize,d0
	move.l	#MEMF_FAST,d1
	move.l	4.w,a6
	jsr	AllocMem(a6)
	move.l	d0,a2
	move.w	d4,BitMap_Depth(a2)
	move.w	d3,BitMap_Width(a2)
	move.w	d2,BitMap_Height(a2)
	lsr.w	#3,d3
	mulu	d3,d2
	move.w	#BitMap_Plane1,d3
BitMap_CreateLp
	move.l	d2,d0
	move.l	#MEMF_CHIP+MEMF_CLEAR,d1
	jsr	AllocMem(a6)
	move.l	d0,(a2,d3)
	add.w	#4,d3
	sub.b	#1,d4
	bne	BitMap_CreateLp
	move.l	a2,a0
	movem.l	(a7)+,d0-4/a1-2/a6
	rts

;INSTANCE
;  IN
;    a0 = bitmap object pointer
BitMap_Destroy
	movem.l	d0-4/a1-2/a6,-(a7)
	move.l	a0,a2	;bitmap
	move.w	BitMap_Depth(a2),d2
	clr.l	d3
	move.w	BitMap_Width(a2),d3
	lsr.w	#3,d3
	mulu	BitMap_Height(a2),d3	;d3 = size of bitplane in byte
	move.w	#BitMap_Plane1,d4	;current bitplane pointer
	move.l	4.w,a6
BitMap_DestroyLp
	move.l	d3,d0
	move.l	(a2,d4),a1
	jsr	FreeMem(a6)
	add.w	#4,d4
	sub.w	#1,d2
	bne	BitMap_DestroyLp
	move.l	a2,a1
	move.l	#BitMap_ObjSize,d0
	jsr	FreeMem(a6)
	movem.l	(a7)+,d0-4/a1-2/a6
	rts
	